# unbind C-b
# set -g prefix C-a
# bind C-a send-prefix

bind-key -n F2 new-window \; rename-window ""
bind-key -n F3 display-panes \; split-window -h
bind-key -n F4 display-panes \; split-window -v
bind-key -n F9 previous-window
bind-key -n F10 last-window
bind-key -n F11 next-window

# Enable mouse support in ~/.tmux.conf
set -g mouse on

# Setup 'v' to begin selection as in Vim
bind-key -Tcopy-mode-vi v send -X begin-selection
bind-key -Tcopy-mode-vi y send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Update default binding of `Enter` to also use copy-pipe
unbind-key -Tcopy-mode-vi Enter
bind-key -Tcopy-mode-vi Enter send -X copy-pipe "reattach-to-user-namespace pbcopy"

# Bind ']' to use pbpaste
bind ] run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
# bind without -n = prefixed with C-b
# so the following is C-b K
bind K send-keys -R \; send-keys C-l \; clear-history

set -sg escape-time 0
set -g status-position top
setw -g aggressive-resize on
set -g window-status-current-style bg=red
